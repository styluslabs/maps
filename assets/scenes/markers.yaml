global:
    marker_font: Open Sans
    poi_icons:
        tourism: { "viewpoint": "viewpoint", "camp_site": "campground", "information": "information",
          "museum": "museum", "hotel": "hotel", "motel": "hotel", "hostel": "hotel", "guest_house": "hotel",
          "bed_and_breakfast": "hotel", "chalet": "hotel", "alpine_hut": "hotel", "attraction": "attraction",
          "artwork": "artwork", "gallery": "shop", "wikipedia": wikipedia }
        historic: { "monument": "artwork" }
        leisure: { "fitness_centre": "gym", "sports_centre": "gym", "park": "tree", "golf_course": "golf" }
        amenity: { "parking": "parking", "bicycle_rental": "bike_shop", "university": "university",
          "school": "university", "college": "university", "kindergarten": "university", "restaurant": "restaurant",
          "fast_food": "restaurant", "food_court": "restaurant", "ice_cream": "restaurant", "cafe": "cafe",
          "pharmacy": "pharmacy", "bar": "bar", "pub": "bar", "nightclub": "bar", "library": "library",
          "cinema": "theatre", "theatre": "theatre", "concert_hall": "theatre", "arts_centre": "theatre",
          "place_of_worship": "religious", "bank": "bank", "hospital": "hospital", "clinic": "doctor",
          "doctors": "doctor", "fuel": "fuel", "dentist": "dentist", "toilets": "toilet",
          "drinking_water": "drinking_water", "water_point": "drinking_water" }
        shop: { "beverages": "cafe", "confectionery": "cafe", "bakery": "bakery", "pastry": "bakery",
          "supermarket": "grocery", "convenience": "convenience", "greengrocer": "convenience", "deli": "convenience",
          "delicatessen": "convenience", "butcher": "convenience", "farm": "convenience", "alcohol": "liquor",
          "wine": "liquor", "clothes": "clothes", "tailor": "clothes", "fashion_accessories": "clothes",
          "shoes": "clothes", "fashion": "clothes", "hardware": "hardware", "doityourself": "hardware",
          "bicycle": "bike_shop", "chemist": "pharmacy", "car_repair": "auto_repair", "laundry": "laundry",
          "dry_cleaning": "laundry", "hairdresser": "scissor", "beauty": "scissor" }
        railway: { "station": "train", "tram_stop": "tram" }
        station: { "light_rail": "tram" }
        religion: { "christian": "christian", "muslim": "muslim", "buddhist": "buddhist", "hindu": "hindu", "shinto": "shinto", "jewish": "jewish" }

    poi_type: { "viewpoint": "public", "campground": "public", "information": "public", "parking": "public", "toilet": "public", "drinking_water": "public", "artwork": "culture", "museum": "culture", "attraction": "culture", "university": "culture", "library": "culture", "theatre": "culture", "religious": "culture", "shop": "shop", "bike_shop": "shop", "pharmacy": "shop", "fuel": "shop", "grocery": "shop", "convenience": "shop", "liquor": "shop", "clothes": "shop", "hardware": "shop", "gym": "service", "bank": "service", "dentist": "service", "auto_repair": "service", "laundry": "service", "scissor": "service", "restaurant": "food", "cafe": "food", "bar": "food", "bakery": "food", "hospital": "medical", "doctor": "medical", "hotel": "lodging", "tree": "outdoor", "golf": "outdoor", "christian": "culture", "muslim": "culture", "buddhist": "culture", "hindu": "culture", "shinto": "culture", "jewish": "culture" }

    poi_color:
        public: "#1A73E8"
        culture: "#12B5CB"
        lodging: "#F06292"
        shop: "#5491F5"
        service: "#9398DD"
        food: "#F68C30"
        medical: "#EE675C"
        outdoor: "#34A853"
        generic: "#78909C"

    poi_color_fn: function() { return global.poi_color[global.poi_type[global.poi_sprite_fn()]] || global.poi_color.generic; }

    poi_sprite_fn: |
        function() {
          const t = global.poi_icons;
          return t.tourism[feature.tourism] || t.leisure[feature.leisure] || t.religion[feature.religion]
              || t.amenity[feature.amenity] || t.historic[feature.historic] || t.shop[feature.shop]
              || (feature.shop ? "shop" : "");
        }


fonts:
    Open Sans:
        - weight: 600
          url: fonts/OpenSans-SemiBold.ttf


textures:
    pois:
        url: img/pois.svg
        density: 2
        # sprites set from svg ids

    loc-marker:
        density: 2
        url: |
            data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24pt" height="24pt" viewBox="-12 -12 24 24">
              <path d="M0 -11 L-4.5 -6.5 A9 9 0 0 1 4.5 -6.5 L0 -11" fill="#FF0000"/>
              <circle cx="0" cy="0" r="7" fill="#00FF00"/>
              <circle cx="0" cy="0" r="5.5" fill="#FF0000"/>
            </svg>

    pin-marker:
        density: 2
        url: |
            data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12pt" height="18pt" viewBox="4 0 16 24">
              <g fill="#FF0000" stroke="#00FF00" stroke-width="0.5" stroke-alignment="inner">
                <path d="M5 8c0-3.517 3.271-6.602 7-6.602s7 3.085 7 6.602c0 3.455-2.563 7.543-7 14.527-4.489-7.073-7-11.072-7-14.527"/>
              </g>
            </svg>


styles:
    loc-points:
        mix: poi-points
        blend_order: 1000

    poi-points:
        base: points
        # make sure this is drawn over search dots
        blend_order: 1
        draw:
            outline:
                color: white
        shaders:
            # maps red in texture to point color, green to point outline color
            blocks:  # see core/shaders/point.fs to see how this is used
                global: |
                    #ifdef TANGRAM_FRAGMENT_SHADER
                    #define TANGRAM_CUSTOM_MAIN
                    void main()
                    {
                      vec4 tex = texture2D(u_tex, v_texcoords);
                      float bg = tex.r;
                      float icon = tex.g;
                      vec4 color = icon*v_outline_color + (1.0-icon)*(bg*v_color);
                      color.a *= v_alpha;
                      gl_FragColor = color;
                    }
                    #endif


layers:
    pick-marker:
        draw:
            marker:
                style: poi-points
                texture: pin-marker
                size: [22px, 33px]
                interactive: true
                color: "#CF513D"
                outline: { color: black }
                #collide: false
                # this indicates all colliding labels should be hidden immediately (see labelManager.cpp)
                transition: { selected: { time: 1s } }
                priority: -1  #'function() { return feature.priority; }'
                offset: [0px, -14px]
                text:
                    text_source: name
                    anchor: [right, left, bottom, top]
                    #collide: true
                    #optional: true
                    max_lines: 2
                    offset: [0px, -11px]
                    font:
                        family: global.marker_font
                        weight: 600
                        size: 12px
                        fill: black
                        stroke: { color: white, width: 2px }

    bookmark-marker:
        draw:
            marker:
                style: poi-points
                texture: pin-marker
                size: [18px, 27px]
                interactive: true
                collide: true
                color: function() { return feature.color || '#12B5CB'; }
                outline: { color: black }
                priority: 'function() { return 1 + (1+feature.priority)/1E6; }'
                offset: [0px, -11px]
                text:
                    text_source: name
                    anchor: [right, left, bottom, top]
                    collide: true
                    optional: true
                    max_lines: 2
                    offset: [0px, -11px]
                    font:
                        family: global.marker_font
                        weight: 600
                        size: 12px
                        fill: black
                        stroke: { color: white, width: 2px }

    bookmark-dot:
        draw:
            marker:
                style: points
                collide: false
                size: 6px
                color: function() { return feature.color || '#12B5CB'; }
                outline:
                    width: 0.5px
                    color: black  #function() { return feature.color || '#12B5CB'; }

    search-marker:
        draw:
            marker:
                style: poi-points
                texture: pois
                sprite: global.poi_sprite_fn
                sprite_default: generic
                color: "#CF513D"
                size: [[13, 16px], [16, 18px]]
                interactive: true
                collide: true
                priority: 'function() { return (1+feature.priority)/1E6; }'
                text:
                    text_source: ['name_en', 'name']
                    anchor: [right, left, bottom, top]
                    collide: true
                    optional: true
                    max_lines: 2
                    font:
                        family: global.marker_font
                        weight: 600
                        size: 12px
                        fill: black
                        stroke: { color: white, width: 2px }

    search-dot:
        draw:
            marker:
                style: points
                collide: false
                size: 6px
                color: "#CF513D"
                outline:
                    width: 1px
                    color: "#9A291D"

    loc-marker:
        draw:
            marker:
                style: loc-points
                texture: loc-marker
                interactive: true
                collide: false
                size: 32px
                angle: 'function() { return feature.angle; }'
                color: |
                    function() { return feature.selected ? '#CF513D' : (feature.hasfix ? '#0000FF' : '#909090'); }
                priority: -1000
                outline:
                    width: 2px
                    color: "#FFFFFF"

    waypoint:
        draw:
            marker:
                style: poi-points
                texture: pin-marker
                size: [16px, 24px]
                interactive: true
                collide: true
                color: function() { return feature.color || '#12B5CB'; }
                outline: { color: black }
                priority: 'function() { return 2 + (1+feature.priority)/1E6; }'
                offset: [0px, -11px]
                text:
                    text_source: name
                    anchor: [right, left, bottom, top]
                    collide: true
                    optional: true
                    max_lines: 2
                    offset: [0px, -11px]
                    font:
                        family: global.marker_font
                        weight: 600
                        size: 12px
                        fill: black
                        stroke: { color: white, width: 2px }

    track-marker:
        draw:
            marker:
                style: points
                interactive: true
                collide: false
                size: 12px
                color: function() { return feature.color || '#0000FF'; }
                outline:
                    width: 1px
                    #color: "#9A291D"
                    color: white

    track:
        draw:
            track:
                style: lines
                interactive: true
                color: function() { return feature.color || '#0000FF'; }
                width: 2px
                order: 5000

    selected-track:
        draw:
            track:
                style: lines
                interactive: true
                color: function() { return feature.color || '#0000FF'; }
                width: 2px
                order: 5000
                outline:
                    width: 2px
                    color: white

    recording-track:
        draw:
            track:
                style: lines
                interactive: true
                color: function() { return feature.color || '#FF0000'; }
                width: 4px
                order: 5000
