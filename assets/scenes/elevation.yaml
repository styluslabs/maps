# elevation.yaml

sources:
    elevation:
        type: Raster
        filtering: nearest
        url: https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer/tile/{z}/{y}/{x}
        max_zoom: 16
        cache: elevation
        # 2 years
        max_age: 63072000
        attribution: |
            Maxar, Airbus DS, USGS, NGA, NASA, CGIAR, GEBCO, N Robinson, NCEAS, NLS, OS, NMA, Geodatastyrelsen and the GIS User Community
        #{ url: 'https://elevation-tiles-prod.s3.amazonaws.com/geotiff/{z}/{x}/{y}.tif', max_zoom: 14, zoom_offset: 1, cache: terrarium-tiff }


styles:
    get-elevation:
        raster: custom
        shaders:
            defines:
                ELEVATION_INDEX: 0
                # this doesn't work because TANGRAM_NUM_RASTER_SOURCES is fixed (at the max possible value) for all styles
                #ELEVATION_INDEX: '(TANGRAM_NUM_RASTER_SOURCES - 1)'
                ELEVATION_FLOAT_TEX: true
                # sampler2D default is lowp!
                TANGRAM_RASTER_PRECISION: 'highp'
            blocks:
                global: |
                    #if defined(TANGRAM_FRAGMENT_SHADER) || defined(TANGRAM_VERTEX_RASTERS)
                    float getElevationAt(vec2 uv) {  // in meters  //TANGRAM_RASTER_PRECISION sampler2D tex,
                        vec4 h = texture2D(u_rasters[ELEVATION_INDEX], uv);
                    #ifdef ELEVATION_FLOAT_TEX
                        return h.r;
                    #else
                        return (h.r*256. + h.g + h.b/256.)*255. - 32768.;  // mapzen terrarium
                        //return (h.r*256.*256. + h.g*256. + h.b)*0.1 - 10000.;  // mapbox
                    #endif
                    }
                    float getElevation() { return getElevationAt(currentRasterUV(ELEVATION_INDEX)); }
                    #endif
